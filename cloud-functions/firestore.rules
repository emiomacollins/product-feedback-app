rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
      
      function changedFields(request, resource){
      	return request.resource.data.diff(resource.data).affectedKeys()
      }
      
      function userExists(){
      	return request.auth.uid != null;
      }
      
      match /feedbacks/{feedbackID} {
      	function isCreator(){
        	return resource.data.creator == request.auth.uid
        }
      
      	allow read: if true;
        allow create: if userExists(); // validate properties too
        allow update: if userExists() && 
          (
           		isCreator() && changedFields(request,resource).hasOnly(
            		['title', 'details', 'status', 'category', 'upVotes', 'commentIds']
            	) || 
            	changedFields(request,resource).hasOnly(
            		['upVotes', 'commentIds']
            	)
          );
        allow delete: if isCreator();
      }
      
      match /comments/{commentID} {
      	allow read: if true;
      	allow write: if userExists();
      }
    }
  }
}